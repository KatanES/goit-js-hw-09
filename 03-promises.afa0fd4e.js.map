{"mappings":"ACAA,SAAS,IAAA,CAAK,KAAA,CAAM,eAAA,CAAkB,UACtC,MAAM,EAAO,SAAS,aAAA,CAAc,aAC9B,EAAU,CACd,SAAU,gBACV,SAAU,OACV,aAAc,OACd,QAAS,IACT,aAAc,CAAA,EACd,kBAAmB,YACrB,EACA,EAAK,gBAAA,CAAiB,QAatB,SAAyB,CAAC,EACxB,EAAE,cAAF,GACA,GAAM,CAAA,MAAE,CAAA,CAAK,KAAE,CAAA,CAAI,OAAE,CAAA,CAAQ,CAAG,EAAE,aAAA,CAAc,QAAhD,CACI,EAAa,OAAO,EAAM,KAA9B,EACI,EAAY,OAAO,EAAK,KAA5B,EACI,EAAc,OAAO,EAAO,KAAhC,EACA,IAAK,IAAI,EAAI,EAAG,GAAK,EAAa,GAAK,EAErC,AApBJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,MAAA,GAAW,GACtC,WAAW,KACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EASkB,EADd,GAAc,GAEX,IAAA,CAAK,CAAC,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,IACxB,OAAO,OAAA,CACL,CAAC,qCAAqC,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAChE,EAEJ,GACC,KAAA,CAAM,CAAC,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,IACzB,OAAO,OAAA,CACL,CAAC,qBAAqB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAChD,EAEJ,GACF,EAAE,aAAA,CAAc,KAAhB,EAEJ","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["var $47d4ff9957288465$exports = {};\ndocument.body.style.backgroundColor = \"#F7EFF4\";\nconst $47d4ff9957288465$var$form = document.querySelector(\"form.form\");\nconst $47d4ff9957288465$var$options = {\n    position: \"center-bottom\",\n    distance: \"15px\",\n    borderRadius: \"15px\",\n    timeout: 10000,\n    clickToClose: true,\n    cssAnimationStyle: \"from-right\"\n};\n$47d4ff9957288465$var$form.addEventListener(\"click\", $47d4ff9957288465$var$onPromiseCreate);\nfunction $47d4ff9957288465$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\nfunction $47d4ff9957288465$var$onPromiseCreate(e) {\n    e.preventDefault();\n    const { delay: delay , step: step , amount: amount  } = e.currentTarget.elements;\n    let inputDelay = Number(delay.value);\n    let inputStep = Number(step.value);\n    let inputAmount = Number(amount.value);\n    for(let i = 1; i <= inputAmount; i += 1){\n        inputDelay += inputStep;\n        $47d4ff9957288465$var$createPromise(i, inputDelay).then(({ position: position , delay: delay  })=>{\n            Notify.success(`:white_check_mark: Fulfilled promise ${position} in ${delay}ms`, $47d4ff9957288465$var$options);\n        }).catch(({ position: position , delay: delay  })=>{\n            Notify.failure(`:x: Rejected promise ${position} in ${delay}ms`, $47d4ff9957288465$var$options);\n        });\n        e.currentTarget.reset();\n    }\n}\n\n\n//# sourceMappingURL=03-promises.afa0fd4e.js.map\n","document.body.style.backgroundColor = '#F7EFF4';\nconst form = document.querySelector('form.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\nform.addEventListener('click', onPromiseCreate);\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `:white_check_mark: Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `:x: Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["document","body","style","backgroundColor","$47d4ff9957288465$var$form","querySelector","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","addEventListener","e","preventDefault","delay","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","$47d4ff9957288465$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.afa0fd4e.js.map"}